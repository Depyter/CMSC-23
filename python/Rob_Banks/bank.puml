@startuml Banking

abstract class "Bank Account" {
    #String owner
    +Int account_number
    #Bool status
    #Float balance
    +deposit(amount: Float): Bool
    #_withdraw(amount: Float): Bool
    #getBalance(): Float
    #getStatus(): Bool
    #getAccountNumber(): Int
    #getAccountName(): String
    #dueForDeactivation(): Bool
}

interface Transferable {
    +transfer(toAccount: Int, amount: Float): Bool
}

class Payroll {
    #String acctype = 'payroll'
}

class Debit {
    #String acctype = 'debit'
    +Float minimum_bal
    +Float interest_rate
}

class Credit {
    #String acctype = 'credit'
    +Float credit_limit
    +Float interest_rate
}

class AccountManager {
    #String username
    #Bank Account bankaccounts {}
    -openNewAccount(owner: String, acctype: String): void
    -deleteAccount(account_number: Int): void
    -accessAccount(account_number: Int): void
    -transferFunds(toAccount: Int, amount: Float): void
    -showAllAccounts(): void
    -showCurrentAccount(): void
}

package Bank <<Database>> {
    class Database {
        +add_account_to_db(owner, status, 
        bal, acc_type): Int
        +delete_account_from_db(acc_num): Bool
        +update_bal(acc_num, new_bal, 
        type, amount): Bool
        +access_account_db(acc_num): List
        +add_to_trans_history(acc_num, bal, 
        type, amount): Bool
    }
}

interface account_change {
    +monthlyChanges(): void
}

Database <|-- AccountManager
account_change <|.. AccountManager
AccountManager <|-- Transferable
AccountManager *-- "Bank Account"
"Bank Account" <|-- Payroll
"Bank Account" <|-- Debit
"Bank Account" <|-- Credit
Transferable <|.. Credit
Transferable <|.. Debit

@enduml